spring.application.name=auth
server.port=8181

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/auth
spring.datasource.username=postgres
spring.datasource.password=password

spring.jpa.database=postgresql
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# openssl rand -base64 32
jwt.secret.key=Km0lNED77gSMUGBh6HVq4GvNTNE+umTkDncfr8n0I78=
jwt.access.duration.ms=60000
jwt.refresh.duration.sec=86400

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

auth.user.rmq.exchange=user_events_exchange
auth.user.rmq.keys.registered=user.registered

# TODO:
# 1) refresh token
# 2) update role & role based access control
# 3) password policies for weak/medium/strong password
# 4) add salt to password
# 5) 2fa
# 6) @ControllerAdvise
# 7) JWT_SECRET_KEY from the env
# 8) view/update user information
# 9) password reset